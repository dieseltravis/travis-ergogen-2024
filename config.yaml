units:
  pp: U + 2
  op: U + 6
  wall3d: 2
  stlp: U + 6 + (2 * wall3d)
  screwSize: 1.5
  standoffSize: 2.5
  standoffHeight: 4.0
  boardThick: 1.6
points:
  zones:
    matrixl:
      anchor:
        shift: [27, -175]
        rotate: 0
      key:
        padding: U
        spread: U
        splay: -1
      columns:
        outer:
          key.splay: 0
          rows:
            bottom:
              shift: [-pp / 4, 0]
              width: 1.5U
            home.width: 1.5U
            top.width: 1.5U
            num.shift: [pp / 4, 0]
        pinky:
          key.splay: 0
          rows:
            bottom.shift: [0, 0]
            num.shift: [0, 0]
            func.skip: true
        ring:
          key:
            stagger: 2
          rows:
            bottom.shift: [0, 0]
            num.shift: [0, 0]
        middle:
          key:
            stagger: 1
          rows:
            bottom.shift: [0, 0]
            num.shift: [0, 0]
        index:
          key:
            stagger: -1
          rows:
            mod.skip: true
            num.shift: [0, 0]
        inner:
          key:
            stagger: -0.25
            splay: 0
          rows:
            mod:
              shift: [0.6, 0]
              width: 3U
            bottom.shift: [0, 0]
            num.shift: [0, 0]
      rows:
        mod:
        bottom:
        home:
        top:
        num:
        func:
    matrixr:
      anchor:
        ref: matrixl_inner_home
        shift: [3U + 2, -2U + 2.6]
        rotate: 5
      key:
        padding: U
        spread: U
        splay: -1
      columns:
        inner:
          key.splay: 0
          rows.mod:
            shift: [-0.6, 0]
            width: 3U
          rows.bottom.shift: [0.6, 0]
        index:
          key:
            stagger: 0.25
            splay: 0
          rows.mod.skip: true
        middle:
          key:
            stagger: 1
        ring:
          key:
            stagger: -1
        pinky:
          key:
            stagger: -2
          rows.func.skip: true
        outer:
          key.splay: 0
          rows.bottom:
            shift: [U / 4 + 0.6, 0]
            width: 1.5U
          rows.home.shift: [-U / 4 - 0.6, 0]
        outer2:
          key.splay: 0
          rows.mod.skip: true
          rows.bottom.skip: true
          rows.home:
            shift: [U / 4 + 0.6, 0]
            width: 1.5U
          rows.top.shift: [-U / 4 - 0.6, 0]
        outer3:
          key.splay: 0
          rows.mod.skip: true
          rows.bottom.skip: true
          rows.home.skip: true
          rows.num:
            shift: [U / 4 + 0.6, 0]
            width: 1.5U
          rows.func:
            shift: [-U / 4 - 0.6, 0]
        outer4:
          key.splay: 0
          rows.mod.skip: true
          rows.bottom.skip: true
          rows.home.skip: true
          rows.top.skip: true
          rows.num.skip: true
      rows:
        mod:
        bottom:
        home:
        top:
        num:
        func:
    arrows:
      anchor:
        ref: matrixr_inner_mod
        shift: [7.75U - 2, -0.75U - 2]
        rotate: 45
      key:
        padding: U
        spread: U
      columns:
        left:
        right:
      rows:
        bottom:
        top:
    pages:
      anchor:
        ref: arrows_right_bottom
        shift: [1.25U, 0]
      key:
        padding: U
        spread: U
      columns:
        left:
        right:
      rows:
        bottom:
        top:
    special:
      anchor:
        ref: matrixr_outer4_func
        shift: [1.5U, -U]
      key:
        padding: U
        spread: U
      columns:
        left:
        #mid:
        right:
      rows:
        bottom:
        top:
  rotate: 0.6660
outlines:
  raw:
    - what: rectangle
      where: true
      bound: true
      size: [pp, pp]
  keys:
    - what: rectangle
      where: true
      bound: false
      size: [U - 0.5,U - 0.5]
  board:
    - what: polygon
      operation: stack
      points:
        # top left
        - ref: matrixl_outer_func
          shift: [-0.5op, 20]
        - ref: matrixl_outer_func
          shift: [0, 20]
        - ref: matrixl_ring_func
          shift: [0, 20]
        - ref: matrixl_middle_func
          shift: [0, 20]
        - ref: matrixl_index_func
          shift: [0, 20]
        - ref: matrixl_inner_func
          shift: [0.5op, 20]
        - ref: matrixl_inner_func
          shift: [0.75op, 15]
        # top center
        - ref: matrixr_inner_func
          shift: [-0.75op, 15]
        - ref: matrixr_inner_func
          shift: [-0.5op, 20]
        - ref: matrixr_index_func
          shift: [0, 20]
        - ref: matrixr_middle_func
          shift: [0, 20]
        - ref: matrixr_ring_func
          shift: [0, 20]
        - ref: matrixr_outer_func
          shift: [0, 20]
        - ref: matrixr_outer2_func
          shift: [0, 20]
        - ref: matrixr_outer3_func
          shift: [0, 20]
        - ref: matrixr_outer4_func
          shift: [0, 20]
        - ref: special_left_top
          shift: [-0.5op, 20]
        - ref: special_right_top
          shift: [0.5op, 20]
        # top right
        - ref: special_right_bottom
          shift: [0.5op, -0.5op]
        - ref: pages_right_bottom
          shift: [0.5op, -0.5op]
        - ref: pages_left_bottom
          shift: [-0.5op, -0.5op]
        - ref: arrows_left_bottom
          shift: [-0.5op, -0.5op]
        # bottom right
        - ref: matrixr_outer_mod
          shift: [0.5op, -0.5op]
        - ref: matrixr_outer_mod
          shift: [0, -0.5op]
        - ref: matrixr_pinky_mod
          shift: [0, -0.5op]
        - ref: matrixr_ring_mod
          shift: [0, -0.5op]
        - ref: matrixr_middle_mod
          shift: [-0.5op, -0.5op]
        - ref: matrixr_inner_mod
          shift: [0.5op, -0.5op]
        - ref: matrixr_inner_mod
          shift: [-1op, -0.5op - 1]
        # bottom center
        - ref: matrixl_inner_mod
          shift: [1op, -0.5op - 1]
        - ref: matrixl_inner_mod
          shift: [-0.5op, -0.5op]
        - ref: matrixl_middle_mod
          shift: [0.5op, -0.5op]
        - ref: matrixl_ring_mod
          shift: [0, -0.5op]
        - ref: matrixl_pinky_mod
          shift: [0, -0.5op]
        - ref: matrixl_outer_mod
          shift: [0, -0.5op]
        - ref: matrixl_outer_mod
          shift: [-0.5op, -0.5op]
        # bottom left
        - ref: matrixl_outer_bottom
          shift: [-0.75op, -0.5op]
        - ref: matrixl_outer_top
          shift: [-0.75op, 0.5op]
      fillet: 3
  board3d:
    - what: polygon
      operation: stack
      points:
        # top left
        - ref: matrixl_outer_func
          shift: [-0.5stlp, 20 + wall3d]
        - ref: matrixl_outer_func
          shift: [0, 20 + wall3d]
        - ref: matrixl_ring_func
          shift: [0, 20 + wall3d]
        - ref: matrixl_middle_func
          shift: [0, 20 + wall3d]
        - ref: matrixl_index_func
          shift: [0, 20 + wall3d]
        - ref: matrixl_inner_func
          shift: [0.5stlp, 20 + wall3d]
        - ref: matrixl_inner_func
          shift: [0.75stlp, 15 + wall3d]
        # top center
        - ref: matrixr_inner_func
          shift: [-0.75stlp, 15 + wall3d]
        - ref: matrixr_inner_func
          shift: [-0.5stlp, 20 + wall3d]
        - ref: matrixr_index_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_middle_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_ring_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_outer_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_outer2_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_outer3_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_outer4_func
          shift: [0, 20 + wall3d]
        - ref: special_left_top
          shift: [-0.5stlp, 20 + wall3d]
        - ref: special_right_top
          shift: [0.5stlp, 20 + wall3d]
        # top right
        - ref: special_right_bottom
          shift: [0.5stlp, -0.5stlp]
        - ref: pages_right_bottom
          shift: [0.5stlp, -0.5stlp]
        - ref: pages_left_bottom
          shift: [-0.5stlp, -0.5stlp]
        - ref: arrows_left_bottom
          shift: [-0.5stlp, -0.5stlp]
        # bottom right
        - ref: matrixr_outer_mod
          shift: [0.5stlp, -0.5stlp]
        - ref: matrixr_outer_mod
          shift: [0, -0.5stlp]
        - ref: matrixr_pinky_mod
          shift: [0, -0.5stlp]
        - ref: matrixr_ring_mod
          shift: [0, -0.5stlp]
        - ref: matrixr_middle_mod
          shift: [-0.5stlp, -0.5stlp]
        - ref: matrixr_inner_mod
          shift: [0.5stlp, -0.5stlp]
        - ref: matrixr_inner_mod
          shift: [-1stlp, -0.5stlp - 1]
        # bottom center
        - ref: matrixl_inner_mod
          shift: [1stlp, -0.5stlp - 1]
        - ref: matrixl_inner_mod
          shift: [-0.5stlp, -0.5stlp]
        - ref: matrixl_middle_mod
          shift: [0.5stlp, -0.5stlp]
        - ref: matrixl_ring_mod
          shift: [0, -0.5stlp]
        - ref: matrixl_pinky_mod
          shift: [0, -0.5stlp]
        - ref: matrixl_outer_mod
          shift: [0, -0.5stlp]
        - ref: matrixl_outer_mod
          shift: [-0.5stlp, -0.5stlp]
        # bottom left
        - ref: matrixl_outer_bottom
          shift: [-0.75stlp, -0.5stlp]
        - ref: matrixl_outer_top
          shift: [-0.75stlp, 0.5stlp]
      fillet: 3
  combo:
    - name: board
    - operation: subtract
      name: keys
  mounting:
    - what: circle
      radius: screwSize
      where:
        ref: matrixl_outer_func
        shift: [-0.5U + 2, 0.5U + 4]
    - what: circle
      radius: screwSize
      where:
        ref: matrixl_inner_num
        shift: [2U/3, 0]
    - what: circle
      radius: screwSize
      where:
        ref: matrixr_inner_num
        shift: [-2U/3, 0]
    - what: circle
      radius: screwSize
      where:
        ref: matrixl_inner_bottom
        shift: [2U/3, 0]
    - what: circle
      radius: screwSize
      where:
        ref: matrixr_inner_bottom
        shift: [-2U/3, 0]
    - what: circle
      radius: screwSize
      where:
        ref: special_right_top
        shift: [0.5U - 2, 0.5U + 4]
    - what: circle
      radius: screwSize
      where:
        ref.aggregate.parts: [pages_right_bottom, special_right_bottom]
        shift: [0.3U, -0.3U]
    - what: circle
      radius: screwSize
      where:
        ref.aggregate.parts: [matrixr_outer_mod, arrows_left_bottom]
        shift: [0, -0.5U]
    - what: circle
      radius: screwSize
      where:
        ref: matrixl_outer_mod
        shift: [-0.5U - 3, 0]
  standoff:
    - what: circle
      radius: standoffSize
      where:
        ref: matrixl_outer_func
        shift: [-0.5U + 2, 0.5U + 4]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixl_inner_num
        shift: [2U/3, 0]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixr_inner_num
        shift: [-2U/3, 0]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixl_inner_bottom
        shift: [2U/3, 0]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixr_inner_bottom
        shift: [-2U/3, 0]
    - what: circle
      radius: standoffSize
      where:
        ref: special_right_top
        shift: [0.5U - 2, 0.5U + 4]
    - what: circle
      radius: standoffSize
      where:
        ref.aggregate.parts: [pages_right_bottom, special_right_bottom]
        shift: [0.3U, -0.3U]
    - what: circle
      radius: standoffSize
      where:
        ref.aggregate.parts: [matrixr_outer_mod, arrows_left_bottom]
        shift: [0, -0.5U]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixl_outer_mod
        shift: [-0.5U - 3, 0]
  plate:
    - name: combo
    - operation: subtract
      name: mounting
pcbs:
  travis_erg2024:
    outlines:
      main:
        outline: board
    footprints:
      mx_hotswap:
        what: mx
        where: true
        params:
          keycaps: true
          reverse: false
          hotswap: true
          from: "{{column_net}}"
          to: "{{colrow}}"        
      diode:
        what: diode
        where: true
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
        adjust:
          shift: [0, -5]
      promicro:
        what: promicro
        params:
          orientation: "down"
        where:
          ref.aggregate.parts: [matrixl_inner_func, matrixr_inner_func]
          shift: [0, -2.75]
          rotate: -90
      c1:
        what: CDiscD38W26P25
        params:
          p1: VCC
          p2: GND
        where:
          ref.aggregate.parts: [matrixl_outer_func, matrixl_ring_func]
          # adjust to pin 1
          shift: [(2.5 / 2), (21.34 / 2) + 3]
          rotate: 180
      dip1:
        what: DIP16W762
        params:
          #TODO: add cap across p16 power and p08 ground
          p01: "{{mux0}}" #A
          p02: "{{mux1}}" #B
          p03: "{{mux2}}" #C
          p04: GND #G2A
          p05: "{{mux3}}" #G2B
          p06: VCC #G1
          p07: "{{col7}}" #Y7
          p08: GND #GND C1 P2
          p09: "{{col6}}" #Y6
          p10: "{{col5}}" #Y5
          p11: "{{col4}}" #Y4
          p12: "{{col3}}" #Y3
          p13: "{{col2}}" #Y2
          p14: "{{col1}}" #Y1
          p15: "{{col0}}" #Y0
          p16: VCC #VCC C1 P1
        where:
          ref.aggregate.parts: [matrixl_outer_func, matrixl_ring_func]
          # adjust to pin 1
          shift: [-(7.62 / 2), (21.34 / 2)]
          rotate: 0
      c2:
        what: CDiscD38W26P25
        params:
          p1: VCC
          p2: GND
        where:
          ref.aggregate.parts: [matrixr_outer_func, matrixr_ring_func]
          # adjust to pin 1
          shift: [(2.5 / 2), (21.34 / 2) + 3]
          rotate: 180
      dip2:
        what: DIP16W762
        params:
          p01: mux0 #A
          p02: mux1 #B
          p03: mux2 #C
          p04: GND #G2A
          p05: GND #G2B
          p06: mux3 #G1
          p07: col15 #Y7
          p08: GND #GND C2 P2
          p09: col14 #Y6
          p10: col13 #Y5
          p11: col12 #Y4
          p12: col11 #Y3
          p13: col10 #Y2
          p14: col9 #Y1
          p15: col8 #Y0
          p16: VCC #VCC C2 P1
        where:
          ref.aggregate.parts: [matrixr_outer_func, matrixr_ring_func]
          # adjust to pin 1
          shift: [-(7.62 / 2), (21.34 / 2)]
          rotate: 0
      reset:
        what: button
        params:
          from: GND
          to: RST
        where:
          ref.aggregate.parts: [matrixr_outer4_func, special_left_top]
          shift: [0, 0]
          rotate: -45
      scrollwheel:
        what: scrollwheel
        params:
          from: "{{column_net}}"
          to: "{{colrow}}"
          #TODO:
          A: GND
          B: GND
          #TODO:
          C: GND
          # This pin is unused
          D: undefined
        where:
          ref.aggregate.parts: [matrixl_inner_top, matrixr_inner_top]
          shift: [0, 0]
      sdiode:
        what: diode
        where: 
          ref.aggregate.parts: [matrixl_inner_top, matrixr_inner_top]
          shift: [-6, 9]
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
      rotary:
        what: rotary
        params:
          from: "{{column_net}}"
          to: "{{colrow}}"
          #TODO:
          A: GND
          B: GND
          #TODO:
          C: GND
        where:
          ref.aggregate.parts: [matrixl_inner_bottom, matrixr_inner_bottom, matrixl_inner_home, matrixr_inner_home]
          shift: [0, 0]
          rotate: -90
      rdiode:
        what: diode
        where: 
          ref.aggregate.parts: [matrixl_inner_bottom, matrixr_inner_bottom, matrixl_inner_home, matrixr_inner_home]
          shift: [0, -10]
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
      # stabs
      spacel2u:
        what: ScottoKeebs-Stabilizer_MX_2u
        where:
          ref: matrixl_inner_mod
          shift: [0, 0]
          rotate: 180
      spacel3u:
        what: ScottoKeebs-Stabilizer_MX_3u
        where:
          ref: matrixl_inner_mod
          shift: [0, 0]
      spacer2u:
        #what: MX_Stabilizer_Cutout-2u
        what: ScottoKeebs-Stabilizer_MX_2u
        where:
          ref: matrixr_inner_mod
          shift: [0, 0]
          rotate: 180
      spacer3u:
        what: ScottoKeebs-Stabilizer_MX_3u
        where:
          ref: matrixr_inner_mod
          shift: [0, 0]
      # holes:
      holeTopLeft:
        what: mountinghole
        where:
          ref: matrixl_outer_func
          shift: [-0.5U + 2, 0.5U + 4]
      holeTopMidL:
        what: mountinghole
        where:
          ref: matrixl_inner_num
          shift: [2U/3, 0]
      holeTopMidR:
        what: mountinghole
        where:
          ref: matrixr_inner_num
          shift: [-2U/3, 0]
      holeBottomMidL:
        what: mountinghole
        where:
          ref: matrixl_inner_bottom
          shift: [2U/3, 0]
      holeBottomMidR:
        what: mountinghole
        where:
          ref: matrixr_inner_bottom
          shift: [-2U/3, 0]
      holeTopRight:
        what: mountinghole
        where:
          ref: special_right_top
          shift: [0.5U - 2, 0.5U + 4]
      holeBottomRight1:
        what: mountinghole
        where:
          ref.aggregate.parts: [pages_right_bottom, special_right_bottom]
          shift: [0.3U, -0.3U]
      holeBottomRight2:
        what: mountinghole
        where:
          ref.aggregate.parts: [matrixr_outer_mod, arrows_left_bottom]
          shift: [0, -0.5U]
      holeBottomLeft:
        what: mountinghole
        where:
          ref: matrixl_outer_mod
          shift: [-0.5U - 3, 0]
    #references: true
cases:
  bottom:
    - name: board3d
      extrude: 1
  _outerWall:
    - name: board3d
      extrude: standoffHeight + boardThick
  _innerWall:
    - name: board
      extrude: standoffHeight + boardThick
  wall:
    - what: case
      name: _outerWall
      operation: add
    - what: case
      name: _innerWall
      operation: subtract
  _holes:
    - name: mounting
      extrude: standoffHeight
  _standoffs:
    - name: standoff
      extrude: standoffHeight
  plate3d:
    - name: plate
      extrude: 1
  case:
    - what: case
      name: _standoffs
      operation: add
    - what: case
      name: _holes
      operation: subtract
    - what: case
      name: bottom
      operation: add
    - what: case
      name: wall
      operation: add
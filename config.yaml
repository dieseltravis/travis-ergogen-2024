meta:
  engine: 4.0.5
  name: "travis-ergogen-2024"
  version: &meta_version "2024.03.31"
  date: "2024-03-25"
  author: '"Travis Hardiman"'
  url: https://github.com/dieseltravis/travis-ergogen-2024
  tags: [ "ergogen", "promicro", "keyboard", "cherrymx", "hotswap", "rgb" ]
units:
  pp: U + 2
  # outer perimeter of board
  op: U + 6
  # STL wall width
  wall3d: 1
  # stl padding
  stlp: U + 6 + (2 * wall3d)
  screwSize: 1.5
  standoffSize: 2.5
  standoffHeight: 4.0
  # plate switch width
  pw: 14
  boardThick: 1.6
  # spacebar settings
  #spacew: 3U
  spacew: 2.75U
  #spaceshiftx: 0.6
  spaceshiftx: -1.5
  # stab Y adjust
  staby: 0.62
points:
  zones:
    matrixl:
      anchor:
        # move the PCB into view for KiCad
        shift: [40, -200]
        #rotate: 0
      key:
        padding: U
        spread: U
        splay: 0
        tags: 
          - key
      columns:
        outer:
          key:
            splay: 0
            column_net: col0
          rows:
            mod.key.led_next: LED_30
            mod.key.led_this: LED_29
            bottom:
              shift: [-pp / 4, 0]
              width: 1.5U
            bottom.key.led_next: LED_29
            bottom.key.led_this: LED_28
            home.width: 1.5U
            home.key.led_next: LED_18
            home.key.led_this: LED_17
            top.width: 1.5U
            top.key.led_next: LED_17
            top.key.led_this: LED_16
            num.shift: [pp / 4, 0]
            num.key.led_next: LED_6
            num.key.led_this: LED_5
            func.key.led_next: LED_5
            func.key.led_this: LED_4
        pinky:
          key:
            splay: 0
            column_net: col1
          rows:
            mod.key.led_next: LED_31
            mod.key.led_this: LED_30
            bottom.shift: [0, 0]
            bottom.key.led_next: LED_28
            bottom.key.led_this: LED_27
            home.key.led_next: LED_19
            home.key.led_this: LED_18
            top.key.led_next: LED_16
            top.key.led_this: LED_15
            num.shift: [0, 0]
            num.key.led_next: LED_7
            num.key.led_this: LED_6
            func.skip: true
        ring:
          key:
            splay: -1
            stagger: 2
            #shift: [0.2, 0]
            column_net: col2
          rows:
            mod.key.led_next: LED_32
            mod.key.led_this: LED_31
            bottom.shift: [0, 0]
            bottom.key.led_next: LED_27
            bottom.key.led_this: LED_26
            home.key.led_next: LED_20
            home.key.led_this: LED_19
            top.key.led_next: LED_15
            top.key.led_this: LED_14
            num.shift: [0, 0]
            num.key.led_next: LED_8
            num.key.led_this: LED_7
            func.key.led_next: LED_4
            func.key.led_this: LED_3
        middle:
          key:
            splay: -1
            stagger: 1
            #shift: [0.4, 0]
            column_net: col3
          rows:
            mod.key.led_next: LED_33
            mod.key.led_this: LED_32
            bottom.shift: [0, 0]
            bottom.key.led_next: LED_26
            bottom.key.led_this: LED_25
            home.key.led_next: LED_21
            home.key.led_this: LED_20
            top.key.led_next: LED_14
            top.key.led_this: LED_13
            num.shift: [0, 0]
            num.key.led_next: LED_9
            num.key.led_this: LED_8
            func.key.led_next: LED_3
            func.key.led_this: LED_2
        index:
          key:
            splay: -1
            stagger: -1
            #shift: [0.2, 0]
            column_net: col4
          rows:
            mod.skip: true
            bottom.key.led_next: LED_25
            bottom.key.led_this: LED_24
            home.key.led_next: LED_22
            home.key.led_this: LED_21
            top.key.led_next: LED_13
            top.key.led_this: LED_12
            num.shift: [0, 0]
            num.key.led_next: LED_10
            num.key.led_this: LED_9
            func.key.led_next: LED_2
            func.key.led_this: LED_1
        inner:
          key:
            stagger: -0.25
            splay: -0.25
            column_net: col5
          rows:
            mod:
              shift: [spaceshiftx, 0]
              width: spacew
            mod.key.led_next: LED_34
            mod.key.led_this: LED_33
            bottom:
              shift: [-spaceshiftx, 0]
            bottom.key.led_next: LED_24
            bottom.key.led_this: LED_23
            home.key.led_next: LED_23
            home.key.led_this: LED_22
            top.key.led_next: LED_12
            top.key.led_this: LED_11
            #num.shift: [0, 0]
            num.key.led_next: LED_11
            num.key.led_this: LED_10
            func.key.led_next: LED_1
            func.key.led_this: LED_0  # resistor to P9 on promicro
      rows:
        mod:
          tags: row_odd
          row_net: row5
        bottom:
          tags: row_even
          row_net: row4
        home:
          tags: row_odd
          row_net: row3
        top:
          tags: row_even
          row_net: row2
        num:
          tags: row_odd
          row_net: row1
        func:
          tags: row_even
          row_net: row0
    matrixr:
      anchor:
        ref: matrixl_inner_func
        shift: [spacew, -5U + 2.525]
        rotate: 5.5
      key:
        padding: U
        spread: U
        splay: 0
        rotate: 0
        tags: 
          - key
      columns:
        inner:
          key:
            splay: 0
            #rotate: 0
            column_net: col6
          rows:
            mod:
              shift: [-spaceshiftx, 0]
              width: spacew
            mod.key.led_next: LED_35
            mod.key.led_this: LED_34
            bottom.shift: [spaceshiftx, 0]
            bottom.key.led_next: LED_49
            bottom.key.led_this: LED_48
            home.key.led_next: LED_50
            home.key.led_this: LED_49
            top.key.led_next: LED_68
            top.key.led_this: LED_67
            num.key.led_next: LED_69
            num.key.led_this: LED_68
            func.key.led_next: "" # Last LED doesn't go anywhere
            func.key.led_this: LED_87
        index:
          key:
            stagger: 0.25
            splay: 0
            column_net: col7
          rows:
            mod.skip: true
            bottom.key.led_next: LED_48
            bottom.key.led_this: LED_47
            home.key.led_next: LED_51
            home.key.led_this: LED_50
            top.key.led_next: LED_67
            top.key.led_this: LED_66
            num.key.led_next: LED_70
            num.key.led_this: LED_69
            func.key.led_next: LED_87
            func.key.led_this: LED_86
        middle:
          key:
            #shift: [.2, 0]
            stagger: 1
            splay: -1
            column_net: col8
          rows:
            mod.key.led_next: LED_36
            mod.key.led_this: LED_35
            bottom.key.led_next: LED_47
            bottom.key.led_this: LED_46
            home.key.led_next: LED_52
            home.key.led_this: LED_51
            top.key.led_next: LED_66
            top.key.led_this: LED_65
            num.key.led_next: LED_71
            num.key.led_this: LED_70
            func.key.led_next: LED_86
            func.key.led_this: LED_85
        ring:
          key:
            splay: -1
            #shift: [0.2, 0]
            stagger: -1
            column_net: col9
          rows:
            mod.key.led_next: LED_37
            mod.key.led_this: LED_36
            bottom.key.led_next: LED_46
            bottom.key.led_this: LED_45
            home.key.led_next: LED_53
            home.key.led_this: LED_52
            top.key.led_next: LED_65
            top.key.led_this: LED_64
            num.key.led_next: LED_72
            num.key.led_this: LED_71
            func.key.led_next: LED_85
            func.key.led_this: LED_84
        pinky:
          key:
            splay: -1
            #shift: [0.2, 0]
            stagger: -2
            column_net: col10
          rows:
            mod.key.led_next: LED_38
            mod.key.led_this: LED_37
            bottom.key.led_next: LED_45
            bottom.key.led_this: LED_44
            home.key.led_next: LED_54
            home.key.led_this: LED_53
            top.key.led_next: LED_64
            top.key.led_this: LED_63
            num.key.led_next: LED_73
            num.key.led_this: LED_72
            func.skip: true
        outer:
          key:
            #splay: -0.75
            column_net: col11
          rows:
            mod.key.led_next: LED_39
            mod.key.led_this: LED_38
            bottom:
              shift: [U / 4 + 0.6, 0]
              width: 1.5U
            bottom.key.led_next: LED_44
            bottom.key.led_this: LED_43
            home.shift: [-U / 4 - 0.6, 0]
            home.key.led_next: LED_55
            home.key.led_this: LED_54
            top.key.led_next: LED_63
            top.key.led_this: LED_62
            num.key.led_next: LED_74
            num.key.led_this: LED_73
            func.key.led_next: LED_84
            func.key.led_this: LED_83
        outer2:
          key:
            splay: 0
            column_net: col12
          rows:
            mod.skip: true
            bottom.skip: true
            home:
              shift: [U / 4 + 0.6, 0]
              width: 1.5U
            home.key.led_next: LED_56
            home.key.led_this: LED_55
            top.shift: [-U / 4 - 0.6, 0]
            top.key.led_next: LED_62
            top.key.led_this: LED_61
            num.key.led_next: LED_75
            num.key.led_this: LED_74
            func.key.led_next: LED_83
            func.key.led_this: LED_82
        outer3:
          key:
            splay: 0
            column_net: col13
          rows:
            mod.skip: true
            bottom.skip: true
            home.skip: true
            top.key.led_next: LED_61
            top.key.led_this: LED_60
            num:
              shift: [U / 4 + 0.6, 0]
              width: 1.5U
            num.key.led_next: LED_76
            num.key.led_this: LED_75
            func:
              shift: [-U / 4 - 0.6, 0]
            func.key.led_next: LED_82
            func.key.led_this: LED_81
        outer4:
          key:
            splay: 0
            column_net: col13
          rows:
            mod.skip: true
            bottom.skip: true
            home.skip: true
            top.skip: true
            num.skip: true
            func.row_net: row3
            func.key.led_next: LED_81
            func.key.led_this: LED_80
      rows:
        mod:
          tags: row_odd
          row_net: row5
        bottom:
          tags: row_even
          row_net: row4
        home:
          tags: row_odd
          row_net: row3
        top:
          tags: row_even
          row_net: row2
        num:
          tags: row_odd
          row_net: row1
        func:
          tags: row_even
          row_net: row0
    arrows:
      anchor:
        ref: matrixr_inner_mod
        shift: [7.75U - 2, -0.75U - 2]
        rotate: 45
      key:
        padding: U
        spread: U
        tags: 
          - key
      columns:
        left:
          key.column_net: col14
          rows:
            bottom.row_net: row5
            bottom.column_net: col15
            bottom.key.led_next: LED_41
            bottom.key.led_this: LED_40
            top.row_net: row5
            top.key.led_next: LED_40
            top.key.led_this: LED_39
        right:
          key.column_net: col14
          rows:
            bottom.row_net: row4
            bottom.column_net: col15
            bottom.key.led_next: LED_42
            bottom.key.led_this: LED_41
            top.row_net: row4
            top.key.led_next: LED_43
            top.key.led_this: LED_42
      rows:
        bottom:
          tags: row_odd
        top:
          tags: row_even
    pages:
      anchor:
        ref: arrows_right_bottom
        shift: [1.25U, 0]
      key:
        padding: U
        spread: U
        tags: 
          - key
      columns:
        left:
          key.column_net: col14
          rows:
            bottom.row_net: row3
            bottom.column_net: col15
            bottom.key.led_next: LED_58
            bottom.key.led_this: LED_57
            top.row_net: row3
            top.key.led_next: LED_57
            top.key.led_this: LED_56
        right:
          key.column_net: col14
          rows:
            bottom.row_net: row2
            bottom.column_net: col15
            bottom.key.led_next: LED_59
            bottom.key.led_this: LED_58
            top.row_net: row2
            top.key.led_next: LED_60
            top.key.led_this: LED_59
      rows:
        bottom:
          tags: row_odd
        top:
          tags: row_even
    special:
      anchor:
        ref: matrixr_outer4_func
        shift: [1.5U, -U]
      key:
        padding: U
        spread: U
        tags: 
          - key
      columns:
        left:
          key.column_net: col14
          rows:
            bottom.key.led_next: LED_77
            bottom.key.led_this: LED_76
            top.key.led_next: LED_80
            top.key.led_this: LED_79
        right:
          key.column_net: col15
          rows:
            bottom.key.led_next: LED_78
            bottom.key.led_this: LED_77
            top.key.led_next: LED_79
            top.key.led_this: LED_78
      rows:
        bottom:
          tags: row_odd
          row_net: row1
        top:
          tags: row_even
          row_net: row0
  #rotate: 0.25
  rotate: 0.5
outlines:
  # hmm this doesn't work any more
  #raw:
  #  - what: rectangle
  #    where: true
  #    bound: true
  #    size: [pp, pp]
  keys:
    - what: rectangle
      where: true
      bound: false
      size: [U - 0.5,U - 0.5]
  keyholes:
    - what: rectangle
      where: true
      bound: false
      size: [pw, pw]
  board:
    - what: polygon
      operation: stack
      points:
        # top left
        - ref: matrixl_outer_func
          shift: [-0.5op, 20]
        - ref: matrixl_outer_func
          shift: [0, 20]
        - ref: matrixl_ring_func
          shift: [0, 20]
        - ref: matrixl_middle_func
          shift: [0, 20]
        - ref: matrixl_index_func
          shift: [0, 20]
        - ref: matrixl_inner_func
          shift: [0.25op, 20]
        - ref: matrixl_inner_func
          shift: [0.5op, 15]
        # top center
        - ref: matrixr_inner_func
          shift: [-0.5op, 15]
        - ref: matrixr_inner_func
          shift: [-0.25op, 20]
        - ref: matrixr_index_func
          shift: [0, 20]
        - ref: matrixr_middle_func
          shift: [0, 20]
        - ref: matrixr_ring_func
          shift: [0, 20]
        - ref: matrixr_outer_func
          shift: [0, 20]
        - ref: matrixr_outer2_func
          shift: [0, 20]
        - ref: matrixr_outer3_func
          shift: [0, 20]
        - ref: matrixr_outer4_func
          shift: [0, 20]
        - ref: special_left_top
          shift: [-0.5op, 20]
        - ref: special_right_top
          shift: [0.5op, 20]
        # top right
        - ref: special_right_bottom
          shift: [0.5op, -0.5op]
        - ref: pages_right_bottom
          shift: [0.5op, -0.5op]
        - ref: pages_left_bottom
          shift: [-0.5op, -0.5op]
        - ref: arrows_left_bottom
          shift: [-0.5op, -0.5op]
        # bottom right
        - ref: matrixr_outer_mod
          shift: [0.5op+1, -0.5op]
        - ref: matrixr_outer_mod
          shift: [-0.5op, -0.5op]
        - ref: matrixr_pinky_mod
          shift: [0, -0.5op]
        - ref: matrixr_ring_mod
          shift: [0, -0.5op]
        - ref: matrixr_middle_mod
          shift: [-0.5op, -0.5op]
        - ref: matrixr_inner_mod
          shift: [0.5op, -0.5op]
        - ref: matrixr_inner_mod
          shift: [-1op, -0.5op - 1]
        # bottom center
        - ref: matrixl_inner_mod
          shift: [1op, -0.5op - 1]
        - ref: matrixl_inner_mod
          shift: [-0.5op, -0.5op]
        - ref: matrixl_middle_mod
          shift: [0.5op, -0.5op]
        - ref: matrixl_ring_mod
          shift: [0, -0.5op]
        - ref: matrixl_pinky_mod
          shift: [0, -0.5op]
        - ref: matrixl_outer_mod
          shift: [0, -0.5op]
        - ref: matrixl_outer_mod
          shift: [-0.5op, -0.5op]
        # bottom left
        - ref: matrixl_outer_bottom
          shift: [-0.75op, -0.5op]
        - ref: matrixl_outer_top
          shift: [-0.75op, 0.5op]
      fillet: 2
  board3d:
    - what: polygon
      operation: stack
      points:
        # top left
        - ref: matrixl_outer_func
          shift: [-0.5stlp, 20 + wall3d]
        - ref: matrixl_outer_func
          shift: [0, 20 + wall3d]
        - ref: matrixl_ring_func
          shift: [0, 20 + wall3d]
        - ref: matrixl_middle_func
          shift: [0, 20 + wall3d]
        - ref: matrixl_index_func
          shift: [0, 20 + wall3d]
        - ref: matrixl_inner_func
          shift: [0.25stlp, 20 + wall3d]
        - ref: matrixl_inner_func
          shift: [0.5stlp, 15 + wall3d]
        # top center
        - ref: matrixr_inner_func
          shift: [-0.5stlp, 15 + wall3d]
        - ref: matrixr_inner_func
          shift: [-0.25stlp, 20 + wall3d]
        - ref: matrixr_index_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_middle_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_ring_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_outer_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_outer2_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_outer3_func
          shift: [0, 20 + wall3d]
        - ref: matrixr_outer4_func
          shift: [0, 20 + wall3d]
        - ref: special_left_top
          shift: [-0.5stlp, 20 + wall3d]
        - ref: special_right_top
          shift: [0.5stlp, 20 + wall3d]
        # top right
        - ref: special_right_bottom
          shift: [0.5stlp, -0.5stlp]
        - ref: pages_right_bottom
          shift: [0.5stlp, -0.5stlp]
        - ref: pages_left_bottom
          shift: [-0.5stlp, -0.5stlp]
        - ref: arrows_left_bottom
          shift: [-0.5stlp, -0.5stlp]
        # bottom right
        - ref: matrixr_outer_mod
          shift: [0.5stlp-1, -0.5stlp]
        - ref: matrixr_outer_mod
          shift: [-0.5stlp, -0.5stlp]
        - ref: matrixr_pinky_mod
          shift: [0, -0.5stlp]
        - ref: matrixr_ring_mod
          shift: [0, -0.5stlp]
        - ref: matrixr_middle_mod
          shift: [-0.5stlp, -0.5stlp]
        - ref: matrixr_inner_mod
          shift: [0.5stlp, -0.5stlp]
        - ref: matrixr_inner_mod
          shift: [-1stlp, -0.5stlp - 1]
        # bottom center
        - ref: matrixl_inner_mod
          shift: [1stlp, -0.5stlp - 1]
        - ref: matrixl_inner_mod
          shift: [-0.5stlp, -0.5stlp]
        - ref: matrixl_middle_mod
          shift: [0.5stlp, -0.5stlp]
        - ref: matrixl_ring_mod
          shift: [0, -0.5stlp]
        - ref: matrixl_pinky_mod
          shift: [0, -0.5stlp]
        - ref: matrixl_outer_mod
          shift: [0, -0.5stlp]
        - ref: matrixl_outer_mod
          shift: [-0.5stlp, -0.5stlp]
        # bottom left
        - ref: matrixl_outer_bottom
          shift: [-0.75stlp, -0.5stlp]
        - ref: matrixl_outer_top
          shift: [-0.75stlp, 0.5stlp]
      fillet: 3
  combo:
    - name: board
    - operation: subtract
      name: keys
  mounting:
    - what: circle
      radius: screwSize
      where:
        ref: matrixl_outer_func
        shift: [-0.5U + 2, 0.5U + 4]
    - what: circle
      radius: screwSize
      where:
        ref: matrixl_inner_num
        shift: [2U/3, 0]
    - what: circle
      radius: screwSize
      where:
        ref: matrixr_inner_num
        shift: [-2U/3, 0]
    - what: circle
      radius: screwSize
      where:
        ref: matrixl_inner_bottom
        shift: [2U/3, 0]
    - what: circle
      radius: screwSize
      where:
        ref: matrixr_inner_bottom
        shift: [-2U/3, 0]
    - what: circle
      radius: screwSize
      where:
        ref: special_right_top
        shift: [0.5U - 2, 0.5U + 4]
    - what: circle
      radius: screwSize
      where:
        ref.aggregate.parts: [pages_right_bottom, special_right_bottom]
        shift: [0.3U, -0.3U]
    - what: circle
      radius: screwSize
      where:
        ref.aggregate.parts: [matrixr_outer_mod, arrows_left_bottom]
        shift: [0, -0.5U]
    - what: circle
      radius: screwSize
      where:
        ref: matrixl_outer_mod
        shift: [-0.5U - 3, 0]
  standoff:
    - what: circle
      radius: standoffSize
      where:
        ref: matrixl_outer_func
        shift: [-0.5U + 2, 0.5U + 4]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixl_inner_num
        shift: [2U/3, 0]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixr_inner_num
        shift: [-2U/3, 0]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixl_inner_bottom
        shift: [2U/3, 0]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixr_inner_bottom
        shift: [-2U/3, 0]
    - what: circle
      radius: standoffSize
      where:
        ref: special_right_top
        shift: [0.5U - 2, 0.5U + 4]
    - what: circle
      radius: standoffSize
      where:
        ref.aggregate.parts: [pages_right_bottom, special_right_bottom]
        shift: [0.3U, -0.3U]
    - what: circle
      radius: standoffSize
      where:
        ref.aggregate.parts: [matrixr_outer_mod, arrows_left_bottom]
        shift: [0, -0.5U]
    - what: circle
      radius: standoffSize
      where:
        ref: matrixl_outer_mod
        shift: [-0.5U - 3, 0]
  plate:
    - name: board
    - operation: subtract
      name: keyholes
    - operation: subtract
      name: mounting
cases:
  bottom:
    - name: board3d
      extrude: 1
  _outerWall:
    - name: board3d
      extrude: standoffHeight + boardThick
  _innerWall:
    - name: board
      extrude: standoffHeight + boardThick
  wall:
    - what: case
      name: _outerWall
      operation: add
    - what: case
      name: _innerWall
      operation: subtract
  _holes:
    - name: mounting
      extrude: standoffHeight
  _standoffs:
    - name: standoff
      extrude: standoffHeight
  plate3d:
    - name: plate
      extrude: 1
  case:
    - what: case
      name: _standoffs
      operation: add
    - what: case
      name: _holes
      operation: subtract
    - what: case
      name: bottom
      operation: add
    - what: case
      name: wall
      operation: add
pcbs:
  travis_erg2024:
    outlines:
      main:
        outline: board
    footprints:
      keymod-odd:
        what: travis/key-module
        where: meta.tags ~ /row_odd/
        params:
          U: U
          dir: 'LTR'
          name: "{{name}}"
          colnet: "{{column_net}}"
          rownet: "{{row_net}}"
          led_this: "{{key.led_this}}"
          led_next: "{{key.led_next}}"
      keymod-even:
        what: travis/key-module
        where: meta.tags ~ /row_even/
        params:
          U: U
          dir: 'RTL'
          name: "{{name}}"
          colnet: "{{column_net}}"
          rownet: "{{row_net}}"
          led_this: "{{key.led_this}}"
          led_next: "{{key.led_next}}"
      rgbr: # 470 ohm resistor
        what: travis/RAxialL6D25P10H
        params:
          # designator: "R"
          # value: 470
          from: LED #P9 on Promicro
          to: LED_0 #P2 on LED 0
          side: B
        where:
          ref: matrixl_inner_func
          shift: [U / 2 + 2, -14]
          rotate: 90
      cap3: # 6.3V 1000uF
        what: travis/CRadialD63H11P25
        params:
          P1: RAW
          P2: GND
          side: B
        where:
          ref.aggregate.parts: [matrixl_inner_func, matrixr_inner_func]
          shift: [+(2.5 / 2), 8]
          rotate: 180
      promicro:
        what: travis/ScottoKeebs-Arduino_Pro_Micro #promicro
        params:
          #orientation: "up"
          # left
          #P1:      # D3 TXO/PD3
          #P2:      # D2 RXI/PD2
          #P3: GND
          #P3: GND
          P5: mux3  # D1 SDA
          P6: mux2  # D0 SCL PWM
          P7: mux1  # D4 A6
          P8: mux0  # C6 PWM
          P9: scrC  # D7 A7 PWM
          P10: scrA # E6
          #P11:     # B4 A8
          P12: LED  # B5 A9 PWM
          # right
          #P24: RAW LEDV
          #P23: GND
          #P22: RESET 13
          #P21: 3.3V
          P20: row0 # F4 A3
          P19: row1 # F5 A2
          P18: row2 # F6 A1
          P17: row3 # F7 A0
          P16: row4 # B1 SCLK
          P15: row5 # B3 MISO
          P14: encA # B2 MOSI
          P13: encC # B6 A10 PWM
        where:
          ref.aggregate.parts: [matrixl_inner_func, matrixr_inner_func]
          shift: [0, -2.75]
          #rotate: -90
      cap1: # 104
        what: travis/CDiscD38W26P25
        params:
          P1: VCC
          P2: GND
        where:
          ref.aggregate.parts: [matrixl_outer_func, matrixl_ring_func]
          # adjust to pin 1
          shift: [(2.5 / 2), (21.34 / 2) + 3.25]
          rotate: 180
      dip1: # 74HC138N
        what: travis/DIP16W762
        params:
          value: "74HC138N"
          p01: mux0 #A
          p02: mux1 #B
          p03: mux2 #C
          p04: GND #G2A
          p05: mux3 #G2B
          p06: VCC #G1
          p07: col0 #row5 #Y7 (there is no row6)
          p08: GND #GND C1 P2
          p09: col1 #row4 #Y6
          p10: col2 #row3 #Y5
          p11: col3 #row2 #Y4
          p12: col4 #row1 #Y3
          p13: col5 #row0 #Y2
          p14: col6 #Y1
          p15: col7 #Y0
          p16: VCC #VCC C1 P1
        where:
          ref.aggregate.parts: [matrixl_outer_func, matrixl_ring_func]
          # adjust to pin 1
          shift: [-(7.62 / 2), (21.34 / 2)]
          rotate: 0
      cap2: # 104
        what: travis/CDiscD38W26P25
        params:
          P1: VCC
          P2: GND
        where:
          ref.aggregate.parts: [matrixr_outer_func, matrixr_ring_func]
          # adjust to pin 1
          shift: [(2.5 / 2), (21.34 / 2) + 3.25]
          rotate: 180
      dip2: # 74HC138N
        what: travis/DIP16W762
        params:
          value: "74HC138N"
          p01: mux0 #A
          p02: mux1 #B
          p03: mux2 #C
          p04: GND #G2A
          p05: GND #G2B
          p06: mux3 #G1
          p07: col8 #col15 #Y7
          p08: GND #GND C2 P2
          p09: col9 # #Y6
          p10: col10 #col13 #Y5
          p11: col11 #col12 #Y4
          p12: col12 #col11 #Y3
          p13: col13 #col10 #Y2
          p14: col14 #col9 #Y1
          p15: col15 #col8 #Y0
          p16: VCC #VCC C2 P1
        where:
          ref.aggregate.parts: [matrixr_outer_func, matrixr_ring_func]
          # adjust to pin 1
          shift: [-(7.62 / 2), (21.34 / 2)]
          rotate: 0
      reset:
        what: travis/SWPUSH6H43  #button
        params:
          #from: GND
          #P1: GND
          #to: RST
          #P2: RST
        where:
          ref: matrixr_inner_func
          #shift: [-1U / 2, 3U / 4 + 2]
          shift: [-6.5 / 2, 3U / 4 + 2]
      scrollwheel:
        what: travis/evqwgd001
        params:
          from: col1
          to: scr_to
          A: scrA
          B: GND
          C: scrC
          # This pin is unused
          #D: ""
        where:
          ref.aggregate.parts: [matrixl_inner_top, matrixr_inner_top]
          shift: [0, 0]
      sdiode:
        what: travis/ScottoKeebs-Diode_DO-35 #diode
        where: 
          ref.aggregate.parts: [matrixl_inner_top, matrixr_inner_top]
          shift: [-6, 15.75]
          rotate: -90
        params:
          side: B
          from: scr_to
          to: row0
      rotary:
        what: travis/ec11
        params:
          from: col4
          to: enc_to
          A: encA
          B: GND
          C: encC
        where:
          ref.aggregate.parts: [matrixl_inner_bottom, matrixr_inner_bottom, matrixl_inner_home, matrixr_inner_home]
          shift: [0, 0]
          rotate: -90
      rdiode:
        what: travis/ScottoKeebs-Diode_DO-35 #diode
        where: 
          ref.aggregate.parts: [matrixl_inner_bottom, matrixr_inner_bottom, matrixl_inner_home, matrixr_inner_home]
          shift: [-4.5, -14.5]
          rotate: 90
        params:
          side: B
          from: enc_to
          to: row5
      # stabs
      spacel2u:
        what: travis/ScottoKeebs-Stabilizer_MX_2u
        where:
          ref: matrixl_inner_mod
          shift: [0, -staby]
          rotate: 180
      spacer2u:
        what: travis/ScottoKeebs-Stabilizer_MX_2u
        where:
          ref: matrixr_inner_mod
          shift: [0, -staby]
          rotate: 180
      # holes:
      holeTopLeft:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref: matrixl_outer_func
          shift: [-0.5U + 2, 0.5U + 4]
      holeTopMidL:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref: matrixl_inner_num
          shift: [2U/3, 0]
      holeTopMidR:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref: matrixr_inner_num
          shift: [-2U/3, 0]
      holeBottomMidL:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref: matrixl_inner_bottom
          shift: [2U/3, 0]
      holeBottomMidR:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref: matrixr_inner_bottom
          shift: [-2U/3, 0]
      holeTopRight:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref: special_right_top
          shift: [0.5U - 2, 0.5U + 4]
      holeBottomRight1:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref.aggregate.parts: [pages_right_bottom, special_right_bottom]
          shift: [0.3U, -0.3U]
      holeBottomRight2:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref.aggregate.parts: [matrixr_outer_mod, arrows_left_bottom]
          shift: [0, -0.5U]
      holeBottomLeft:
        what: travis/mountinghole #infused-kim/mounting_hole
        where:
          ref: matrixl_outer_mod
          shift: [-0.5U - 3, 0]
      # logos
      ki:
        what: travis/KiCad-Logo5Copper
        where:
          ref.aggregate.parts: [matrixl_inner_mod, matrixr_inner_mod]
          shift: [0, -5]
      jlcpcb:
        what: ceoloide/text
        where: 
          ref.aggregate.parts: [matrixl_inner_mod, matrixr_inner_mod]
        params:
          text: JLCJLCJLCJLC
          reversible: true
        adjust:
          shift: [0, -8]
      ergologo:
        what: travis/ergogen
        where: 
          ref.aggregate.parts: [matrixl_inner_num, matrixr_inner_num]
        adjust:
          shift: [0, -3]
      travis:
        what: travis/travis
        where: 
          ref.aggregate.parts: [matrixl_inner_mod, matrixr_inner_mod]
        adjust:
          shift: [0, -3]
      version:
        what: travis/text
        where: 
          ref.aggregate.parts: [matrixl_inner_mod, matrixr_inner_mod]
        params:
          face: "CaskaydiaMono NFP"
          text: *meta_version
          size: 0.9
        adjust:
          shift: [0, -1.25]

    references: false
